name: Release
on:
  release:
    types: [prereleased, released]

jobs:
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 1) Repo am Release-Tag auschecken
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      # 2) Java & Gradle einrichten
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      # 3) Version aus dem Tag extrahieren (führt "v1.2.3" -> "1.2.3")
      - name: Extract Version from tag
        id: v
        shell: bash
        run: |
          RAW="${{ github.event.release.tag_name }}"
          # Entfernt führendes "v" (falls vorhanden)
          VERSION="${RAW#v}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Detected version: $VERSION"

      # 4) Publish in den Marketplace (Gradle-Plugin nutzt ENV-Variablen aus build.gradle.kts)
      - name: Publish Plugin to Marketplace
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
        run: |
          ./gradlew \
            -PpluginVersion="${{ steps.v.outputs.version }}" \
            publishPlugin --no-daemon --stacktrace

      # 5) (Optional) ZIP als Release-Asset anhängen
      - name: Upload Release Asset (zip)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" ./build/distributions/*